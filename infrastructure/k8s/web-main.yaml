apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-main
  namespace: zoptal
  labels:
    app: web-main
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web-main
  template:
    metadata:
      labels:
        app: web-main
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: web-main
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: web-main
        image: your-registry.com/zoptal/web-main:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              name: zoptal-app-config
              key: PUBLIC_API_URL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: zoptal-app-secrets
              key: DATABASE_URL
        - name: NEXTAUTH_URL
          value: "https://www.zoptal.com"
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: zoptal-app-secrets
              key: NEXTAUTH_SECRET
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: zoptal-app-secrets
              key: REDIS_URL
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nextjs-cache
          mountPath: /app/.next/cache
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: nextjs-cache
        emptyDir:
          sizeLimit: 1Gi
      - name: tmp
        emptyDir: {}
      imagePullSecrets:
      - name: zoptal-docker-registry
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - web-main
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - web-optimized
---
apiVersion: v1
kind: Service
metadata:
  name: web-main
  namespace: zoptal
  labels:
    app: web-main
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account-id:certificate/certificate-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: web-main
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web-main
  namespace: zoptal
  labels:
    app: web-main
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-main-hpa
  namespace: zoptal
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-main
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: web-main-pdb
  namespace: zoptal
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: web-main