# Prometheus Configuration for Zoptal Platform
# Custom values for kube-prometheus-stack Helm chart

# Prometheus Configuration
prometheus:
  prometheusSpec:
    # Storage configuration
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: fast-ssd
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    
    # Retention settings
    retention: 30d
    retentionSize: 45GB
    
    # Resource limits
    resources:
      requests:
        memory: 2Gi
        cpu: 1000m
      limits:
        memory: 4Gi
        cpu: 2000m
    
    # Scrape configuration
    scrapeInterval: 30s
    evaluationInterval: 30s
    
    # Service monitor selector
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    
    # Additional scrape configs
    additionalScrapeConfigs:
    - job_name: 'zoptal-services'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - zoptal-production
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

    # External labels
    externalLabels:
      cluster: zoptal-production
      environment: production

# Grafana Configuration
grafana:
  enabled: true
  
  # Admin credentials
  adminPassword: "{{ .Values.grafana.adminPassword }}"
  
  # Persistence
  persistence:
    enabled: true
    storageClassName: fast-ssd
    size: 10Gi
  
  # Resource limits
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  
  # Grafana configuration
  grafana.ini:
    server:
      root_url: https://grafana.zoptal.com
      serve_from_sub_path: true
    
    security:
      disable_gravatar: true
      cookie_secure: true
      cookie_samesite: lax
    
    auth:
      disable_login_form: false
      disable_signout_menu: false
    
    auth.anonymous:
      enabled: false
    
    analytics:
      reporting_enabled: false
      check_for_updates: false
    
    users:
      allow_sign_up: false
      allow_org_create: false
      auto_assign_org: true
      auto_assign_org_role: Viewer
    
    log:
      mode: console
      level: info
  
  # Data sources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-prometheus:9090
        access: proxy
        isDefault: true
        editable: false
      - name: Loki
        type: loki
        url: http://loki:3100
        access: proxy
        editable: false
  
  # Dashboard providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'zoptal-dashboards'
        orgId: 1
        folder: 'Zoptal'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/zoptal
  
  # Dashboard config maps
  dashboardsConfigMaps:
    zoptal: zoptal-dashboard
  
  # Service configuration
  service:
    type: ClusterIP
    port: 3000
  
  # Ingress
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
    - grafana.zoptal.com
    tls:
    - secretName: grafana-tls
      hosts:
      - grafana.zoptal.com

# AlertManager Configuration
alertmanager:
  alertmanagerSpec:
    # Storage configuration
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: fast-ssd
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    
    # Resource limits
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 200m
    
    # Configuration
    config:
      global:
        smtp_smarthost: 'smtp.sendgrid.net:587'
        smtp_from: 'alerts@zoptal.com'
        smtp_auth_username: 'apikey'
        smtp_auth_password: '{{ .Values.alertmanager.smtpPassword }}'
      
      route:
        group_by: ['alertname', 'cluster', 'service']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 12h
        receiver: 'zoptal-alerts'
        routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
        - match:
            severity: warning
          receiver: 'warning-alerts'
      
      receivers:
      - name: 'zoptal-alerts'
        email_configs:
        - to: 'devops@zoptal.com'
          subject: '[Zoptal] Alert: {{ .GroupLabels.alertname }}'
          body: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
            {{ end }}
      
      - name: 'critical-alerts'
        email_configs:
        - to: 'critical@zoptal.com'
          subject: '[CRITICAL] Zoptal Alert: {{ .GroupLabels.alertname }}'
          body: |
            üö® CRITICAL ALERT üö®
            
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
            {{ end }}
        slack_configs:
        - api_url: '{{ .Values.alertmanager.slackWebhook }}'
          channel: '#alerts-critical'
          title: '[CRITICAL] Zoptal Alert'
          text: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            {{ end }}
      
      - name: 'warning-alerts'
        email_configs:
        - to: 'warnings@zoptal.com'
          subject: '[WARNING] Zoptal Alert: {{ .GroupLabels.alertname }}'
          body: |
            ‚ö†Ô∏è WARNING ALERT ‚ö†Ô∏è
            
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
            {{ end }}

# Node Exporter Configuration
nodeExporter:
  enabled: true
  
# Kube State Metrics Configuration
kubeStateMetrics:
  enabled: true

# Default rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverError: true
    kubeApiserverSlos: true
    kubelet: true
    kubePrometheusGeneral: true
    kubePrometheusNodeAlerting: true
    kubePrometheusNodeRecording: true
    kubernetesAbsent: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    network: true
    node: true
    prometheus: true
    prometheusOperator: true
    time: true

# Component resource limits
kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false