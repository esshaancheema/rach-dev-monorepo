apiVersion: v1
kind: Secret
metadata:
  name: zoptal-secrets
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal
    app.kubernetes.io/component: secret
type: Opaque
stringData:
  # Database credentials
  POSTGRES_USER: "zoptal_user"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  AUTH_DATABASE_URL: "postgresql://zoptal_user:CHANGE_ME_IN_PRODUCTION@postgres:5432/zoptal_auth"
  PROJECT_DATABASE_URL: "postgresql://zoptal_user:CHANGE_ME_IN_PRODUCTION@postgres:5432/zoptal_projects"
  BILLING_DATABASE_URL: "postgresql://zoptal_user:CHANGE_ME_IN_PRODUCTION@postgres:5432/zoptal_billing"
  
  # Redis credentials
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  REDIS_URL: "redis://:CHANGE_ME_IN_PRODUCTION@redis:6379/0"
  
  # JWT secrets
  JWT_SECRET: "CHANGE_ME_TO_RANDOM_256_BIT_SECRET"
  JWT_REFRESH_SECRET: "CHANGE_ME_TO_DIFFERENT_256_BIT_SECRET"
  
  # Email/SMTP configuration
  SMTP_HOST: "smtp.sendgrid.net"
  SMTP_USER: "apikey"
  SMTP_PASS: "SENDGRID_API_KEY_HERE"
  SENDGRID_API_KEY: "SENDGRID_API_KEY_HERE"
  
  # OAuth credentials
  GOOGLE_CLIENT_ID: "GOOGLE_OAUTH_CLIENT_ID"
  GOOGLE_CLIENT_SECRET: "GOOGLE_OAUTH_CLIENT_SECRET"
  GITHUB_CLIENT_ID: "GITHUB_OAUTH_CLIENT_ID"
  GITHUB_CLIENT_SECRET: "GITHUB_OAUTH_CLIENT_SECRET"
  
  # SMS/Phone verification
  TWILIO_ACCOUNT_SID: "TWILIO_ACCOUNT_SID"
  TWILIO_AUTH_TOKEN: "TWILIO_AUTH_TOKEN"
  TWILIO_PHONE_NUMBER: "+1234567890"
  
  # AI API keys
  OPENAI_API_KEY: "OPENAI_API_KEY_HERE"
  ANTHROPIC_API_KEY: "ANTHROPIC_API_KEY_HERE"
  GOOGLE_AI_API_KEY: "GOOGLE_AI_API_KEY_HERE"
  
  # Stripe credentials
  STRIPE_SECRET_KEY: "sk_live_STRIPE_SECRET_KEY"
  STRIPE_PUBLISHABLE_KEY: "pk_live_STRIPE_PUBLISHABLE_KEY"
  STRIPE_WEBHOOK_SECRET: "whsec_STRIPE_WEBHOOK_SECRET"
  
  # Push notification credentials
  PUSHER_APP_ID: "PUSHER_APP_ID"
  PUSHER_KEY: "PUSHER_KEY"
  PUSHER_SECRET: "PUSHER_SECRET"
  PUSHER_CLUSTER: "us2"
  
  # Firebase credentials (for push notifications)
  FIREBASE_PROJECT_ID: "zoptal-production"
  FIREBASE_CLIENT_EMAIL: "firebase-adminsdk@zoptal-production.iam.gserviceaccount.com"
  FIREBASE_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nFIREBASE_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----"
  
  # AWS credentials
  AWS_ACCESS_KEY_ID: "AWS_ACCESS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: "AWS_SECRET_ACCESS_KEY"
  S3_BUCKET_NAME: "zoptal-production-files"
  
  # Contentful CMS
  CONTENTFUL_SPACE_ID: "CONTENTFUL_SPACE_ID"
  CONTENTFUL_ACCESS_TOKEN: "CONTENTFUL_ACCESS_TOKEN"
  
  # Analytics
  NEXT_PUBLIC_GA_ID: "GA_MEASUREMENT_ID"
  
  # Monitoring credentials
  GRAFANA_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  TRAEFIK_BASIC_AUTH: "admin:$2y$10$HASHED_PASSWORD_HERE"
  
  # Database connection strings for individual services
  DATABASE_URL: "postgresql://zoptal_user:CHANGE_ME_IN_PRODUCTION@postgres:5432/zoptal"

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
type: Opaque
stringData:
  POSTGRES_USER: "zoptal_user"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  POSTGRES_DB: "zoptal"

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
type: Opaque
stringData:
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

---
# TLS Certificate secret (will be managed by cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: zoptal-tls
  namespace: zoptal-production
type: kubernetes.io/tls
data:
  # These will be automatically populated by cert-manager
  tls.crt: ""
  tls.key: ""