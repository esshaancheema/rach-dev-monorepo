# Comprehensive Monitoring Configuration for Zoptal Platform
# This file contains ServiceMonitors, PrometheusRules, and Grafana dashboards

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: zoptal-backend-services
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: service-monitor
    release: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: backend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: zoptal-frontend-apps
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: service-monitor
    release: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: frontend
  endpoints:
  - port: http
    path: /api/metrics
    interval: 30s
    scrapeTimeout: 10s

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: zoptal-databases
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: service-monitor
    release: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: database
  endpoints:
  - port: metrics
    interval: 30s
    scrapeTimeout: 10s

---
# Prometheus Rules for Alerting
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: zoptal-alerts
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: alerts
    release: prometheus
spec:
  groups:
  - name: zoptal.infrastructure
    rules:
    - alert: PodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
      for: 5m
      labels:
        severity: warning
        service: "{{ $labels.pod }}"
      annotations:
        summary: "Pod {{ $labels.pod }} is crash looping"
        description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is restarting frequently"

    - alert: PodNotReady
      expr: kube_pod_status_ready{condition="false"} == 1
      for: 10m
      labels:
        severity: critical
        service: "{{ $labels.pod }}"
      annotations:
        summary: "Pod {{ $labels.pod }} is not ready"
        description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been not ready for more than 10 minutes"

    - alert: DeploymentReplicasMismatch
      expr: kube_deployment_spec_replicas != kube_deployment_status_available_replicas
      for: 10m
      labels:
        severity: warning
        service: "{{ $labels.deployment }}"
      annotations:
        summary: "Deployment {{ $labels.deployment }} has mismatched replicas"
        description: "Deployment {{ $labels.deployment }} has {{ $value }} available replicas, expected {{ $labels.spec_replicas }}"

  - name: zoptal.application
    rules:
    - alert: HighErrorRate
      expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.1
      for: 5m
      labels:
        severity: critical
        service: "{{ $labels.service }}"
      annotations:
        summary: "High error rate for {{ $labels.service }}"
        description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.service }}"

    - alert: HighLatency
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
      for: 10m
      labels:
        severity: warning
        service: "{{ $labels.service }}"
      annotations:
        summary: "High latency for {{ $labels.service }}"
        description: "95th percentile latency is {{ $value }}s for service {{ $labels.service }}"

    - alert: DatabaseConnectionFailure
      expr: up{job="postgres-exporter"} == 0
      for: 5m
      labels:
        severity: critical
        service: database
      annotations:
        summary: "Database connection failure"
        description: "Cannot connect to PostgreSQL database"

    - alert: RedisConnectionFailure
      expr: up{job="redis-exporter"} == 0
      for: 5m
      labels:
        severity: critical
        service: redis
      annotations:
        summary: "Redis connection failure"
        description: "Cannot connect to Redis instance"

  - name: zoptal.resources
    rules:
    - alert: HighCPUUsage
      expr: (sum by (instance) (rate(container_cpu_usage_seconds_total[5m])) * 100) > 80
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "High CPU usage on {{ $labels.instance }}"
        description: "CPU usage is {{ $value }}% on instance {{ $labels.instance }}"

    - alert: HighMemoryUsage
      expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 90
      for: 10m
      labels:
        severity: critical
      annotations:
        summary: "High memory usage on {{ $labels.pod }}"
        description: "Memory usage is {{ $value }}% on pod {{ $labels.pod }}"

    - alert: PersistentVolumeSpaceRunningLow
      expr: (kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes) * 100 < 20
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "PV space running low"
        description: "Volume {{ $labels.persistentvolumeclaim }} has {{ $value }}% space remaining"

---
# Grafana Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: zoptal-dashboard
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: dashboard
    grafana_dashboard: "1"
data:
  zoptal-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Zoptal Platform Overview",
        "tags": ["zoptal", "overview"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Service Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=~\".*zoptal.*\"}",
                "legendFormat": "{{ job }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {
                    "options": {
                      "0": {
                        "text": "DOWN",
                        "color": "red"
                      },
                      "1": {
                        "text": "UP",
                        "color": "green"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            },
            "gridPos": {
              "h": 4,
              "w": 24,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total[5m])) by (service)",
                "legendFormat": "{{ service }}"
              }
            ],
            "yAxes": [
              {
                "label": "Requests/sec"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 4
            }
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{status=~\"5..\"}[5m])) by (service)",
                "legendFormat": "{{ service }} errors"
              }
            ],
            "yAxes": [
              {
                "label": "Errors/sec"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 4
            }
          },
          {
            "id": 4,
            "title": "Response Time (95th percentile)",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service))",
                "legendFormat": "{{ service }}"
              }
            ],
            "yAxes": [
              {
                "label": "Seconds"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 24,
              "x": 0,
              "y": 12
            }
          },
          {
            "id": 5,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"zoptal-production\"}[5m])) by (pod) * 100",
                "legendFormat": "{{ pod }}"
              }
            ],
            "yAxes": [
              {
                "label": "Percent",
                "max": 100
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 20
            }
          },
          {
            "id": 6,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(container_memory_usage_bytes{namespace=\"zoptal-production\"}) by (pod) / 1024 / 1024",
                "legendFormat": "{{ pod }}"
              }
            ],
            "yAxes": [
              {
                "label": "MB"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 20
            }
          }
        ],
        "refresh": "30s",
        "schemaVersion": 30,
        "time": {
          "from": "now-1h",
          "to": "now"
        }
      }
    }

---
# PostgreSQL Exporter for Database Metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/component: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-exporter
        app.kubernetes.io/component: metrics
    spec:
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:v0.12.1
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          valueFrom:
            secretKeyRef:
              name: zoptal-secrets
              key: DATABASE_URL
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/component: metrics
spec:
  ports:
  - port: 9187
    targetPort: 9187
    name: metrics
  selector:
    app.kubernetes.io/name: postgres-exporter

---
# Redis Exporter for Redis Metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: redis-exporter
    app.kubernetes.io/component: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-exporter
        app.kubernetes.io/component: metrics
    spec:
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.45.0
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://redis:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zoptal-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: redis-exporter
    app.kubernetes.io/component: metrics
spec:
  ports:
  - port: 9121
    targetPort: 9121
    name: metrics
  selector:
    app.kubernetes.io/name: redis-exporter

---
# ServiceMonitor for exporters
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: zoptal-exporters
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: service-monitor
    release: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: metrics
  endpoints:
  - port: metrics
    interval: 30s
    scrapeTimeout: 10s

---
# Network Policy for monitoring traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-policy
  namespace: zoptal-production
  labels:
    app.kubernetes.io/name: zoptal-monitoring
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: metrics
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow Prometheus to scrape metrics
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9187
    - protocol: TCP
      port: 9121
  egress:
  # Allow exporters to connect to databases
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: database
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379