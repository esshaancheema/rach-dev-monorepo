apiVersion: v1
kind: ConfigMap
metadata:
  name: traffic-manager-config
  namespace: zoptal-production
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /tmp/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'upstream_addr=$upstream_addr upstream_response_time=$upstream_response_time';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;

        # Load balancing configuration
        upstream blue_backend {
            least_conn;
            server auth-service-blue.zoptal-blue.svc.cluster.local:3001 max_fails=3 fail_timeout=30s;
            server project-service-blue.zoptal-blue.svc.cluster.local:3002 max_fails=3 fail_timeout=30s;
            server ai-service-blue.zoptal-blue.svc.cluster.local:3003 max_fails=3 fail_timeout=30s;
            server file-service-blue.zoptal-blue.svc.cluster.local:3004 max_fails=3 fail_timeout=30s;
            server notification-service-blue.zoptal-blue.svc.cluster.local:3005 max_fails=3 fail_timeout=30s;
            server billing-service-blue.zoptal-blue.svc.cluster.local:3006 max_fails=3 fail_timeout=30s;
            server security-service-blue.zoptal-blue.svc.cluster.local:3007 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        upstream green_backend {
            least_conn;
            server auth-service-green.zoptal-green.svc.cluster.local:3001 max_fails=3 fail_timeout=30s;
            server project-service-green.zoptal-green.svc.cluster.local:3002 max_fails=3 fail_timeout=30s;
            server ai-service-green.zoptal-green.svc.cluster.local:3003 max_fails=3 fail_timeout=30s;
            server file-service-green.zoptal-green.svc.cluster.local:3004 max_fails=3 fail_timeout=30s;
            server notification-service-green.zoptal-green.svc.cluster.local:3005 max_fails=3 fail_timeout=30s;
            server billing-service-green.zoptal-green.svc.cluster.local:3006 max_fails=3 fail_timeout=30s;
            server security-service-green.zoptal-green.svc.cluster.local:3007 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        # Include active environment configuration
        include /etc/nginx/active-env.conf;

        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name _;

            # Security headers
            add_header X-Content-Type-Options nosniff always;
            add_header X-Frame-Options DENY always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Traffic control endpoint (admin only)
            location /traffic-control {
                allow 10.0.0.0/8;
                deny all;
                
                proxy_pass http://localhost:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            # API routing
            location /api/auth/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://$active_backend/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            location /api/ {
                limit_req zone=general burst=20 nodelay;
                
                proxy_pass http://$active_backend/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Catch all
            location / {
                return 404;
            }
        }
    }

  active-env.conf: |
    # Active environment configuration
    # This file is updated by the traffic controller
    set $active_backend blue_backend;

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-manager
  namespace: zoptal-production
  labels:
    app: traffic-manager
    component: blue-green
spec:
  replicas: 3
  selector:
    matchLabels:
      app: traffic-manager
  template:
    metadata:
      labels:
        app: traffic-manager
        component: blue-green
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 9113
          name: metrics
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: active-env-config
          mountPath: /etc/nginx/active-env.conf
          subPath: active-env.conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      
      - name: traffic-controller
        image: zoptal/traffic-controller:v1.0.0
        ports:
        - containerPort: 8080
          name: control
        env:
        - name: ACTIVE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: traffic-manager-config
              key: active-environment
              optional: true
        - name: NGINX_CONFIG_PATH
          value: "/etc/nginx/active-env.conf"
        volumeMounts:
        - name: active-env-config
          mountPath: /etc/nginx
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:0.11.0
        args:
        - -nginx.scrape-uri=http://localhost/nginx_status
        ports:
        - containerPort: 9113
          name: metrics
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      
      volumes:
      - name: nginx-config
        configMap:
          name: traffic-manager-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: active-env-config
        configMap:
          name: traffic-manager-config
          items:
          - key: active-env.conf
            path: active-env.conf

---
apiVersion: v1
kind: Service
metadata:
  name: traffic-manager
  namespace: zoptal-production
  labels:
    app: traffic-manager
    component: blue-green
spec:
  selector:
    app: traffic-manager
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: control
    port: 8080
    targetPort: control
    protocol: TCP
  - name: metrics
    port: 9113
    targetPort: metrics
    protocol: TCP
  type: ClusterIP

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: traffic-manager-pdb
  namespace: zoptal-production
  labels:
    app: traffic-manager
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: traffic-manager