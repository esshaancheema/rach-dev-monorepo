version: '3.8'

services:
  ml-pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql://mluser:mlpassword@postgres:5432/zoptal_ml
      - REDIS_URL=redis://redis:6379/1
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001
      - MODEL_STORAGE_PATH=/app/models
      - DATA_STORAGE_PATH=/app/data
      - LOG_LEVEL=DEBUG
      - PROMETHEUS_PORT=9090
      - SECRET_KEY=dev-secret-key-123
      - MAX_TRAINING_TIME=3600
      - MAX_CONCURRENT_JOBS=3
      - AUTO_ML_ENABLED=true
      - PREDICTION_CACHE_TTL=300
      - MAX_BATCH_SIZE=1000
      - MODEL_SERVER_WORKERS=2
      - MODEL_SERVER_TIMEOUT=60
      - GPU_ENABLED=false
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=zoptal_ml
      - POSTGRES_USER=mluser
      - POSTGRES_PASSWORD=mlpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ml-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ml-network
    command: redis-server --appendonly yes

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.ml_service.celery_app worker --loglevel=info --concurrency=2
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://mluser:mlpassword@postgres:5432/zoptal_ml
      - REDIS_URL=redis://redis:6379/1
      - MODEL_STORAGE_PATH=/app/models
      - DATA_STORAGE_PATH=/app/data
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - ml-network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.ml_service.celery_app beat --loglevel=info
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://mluser:mlpassword@postgres:5432/zoptal_ml
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    networks:
      - ml-network

  celery-flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.ml_service.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - redis
    networks:
      - ml-network

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.8.1
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mluser:mlpassword@postgres:5432/zoptal_ml
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    depends_on:
      - postgres
    networks:
      - ml-network
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://mluser:mlpassword@postgres:5432/zoptal_ml --default-artifact-root /mlflow/artifacts

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ml-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - ml-network

  jupyter:
    image: jupyter/tensorflow-notebook:latest
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=ml-pipeline-jupyter
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/work/data
      - ./models:/home/jovyan/work/models
    networks:
      - ml-network

volumes:
  postgres_data:
  redis_data:
  mlflow_artifacts:
  prometheus_data:
  grafana_data:

networks:
  ml-network:
    driver: bridge