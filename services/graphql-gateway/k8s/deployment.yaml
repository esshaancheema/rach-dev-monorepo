# GraphQL Gateway Kubernetes Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphql-gateway
  namespace: zoptal-production
  labels:
    app: graphql-gateway
    version: v1.0.0
    component: api-gateway
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: graphql-gateway
  template:
    metadata:
      labels:
        app: graphql-gateway
        version: v1.0.0
        component: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: graphql-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: graphql-gateway
        image: zoptal/graphql-gateway:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        - containerPort: 4001
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "4000"
        - name: METRICS_PORT
          value: "4001"
        
        # JWT Configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: graphql-gateway-secrets
              key: jwt-secret
        - name: JWT_EXPIRES_IN
          value: "24h"
        
        # Redis Configuration
        - name: REDIS_HOST
          value: "redis-cluster.zoptal-production.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: password
        
        # Service URLs
        - name: AUTH_SERVICE_URL
          value: "http://auth-service.zoptal-production.svc.cluster.local:3001"
        - name: PROJECT_SERVICE_URL
          value: "http://project-service.zoptal-production.svc.cluster.local:3002"
        - name: AI_SERVICE_URL
          value: "http://ai-service.zoptal-production.svc.cluster.local:3003"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service.zoptal-production.svc.cluster.local:3004"
        - name: BILLING_SERVICE_URL
          value: "http://billing-service.zoptal-production.svc.cluster.local:3005"
        
        # CORS Configuration
        - name: CORS_ORIGINS
          value: "https://zoptal.com,https://*.zoptal.com,https://app.zoptal.com"
        
        # Rate Limiting
        - name: RATE_LIMIT_WINDOW_MS
          value: "900000" # 15 minutes
        - name: RATE_LIMIT_MAX_REQUESTS
          value: "1000"
        
        # Query Limits
        - name: MAX_QUERY_DEPTH
          value: "10"
        - name: MAX_QUERY_COMPLEXITY
          value: "1000"
        
        # Cache Configuration
        - name: CACHE_TTL
          value: "300" # 5 minutes
        
        # Monitoring
        - name: ENABLE_METRICS
          value: "true"
        - name: ENABLE_TRACING
          value: "true"
        
        # Logging
        - name: LOG_LEVEL
          value: "info"
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /ready
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          
        startupProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
        
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
      
      volumes:
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - graphql-gateway
              topologyKey: kubernetes.io/hostname
      
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: graphql-gateway
  namespace: zoptal-production
  labels:
    app: graphql-gateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 4000
    targetPort: 4000
    protocol: TCP
  - name: metrics
    port: 4001
    targetPort: 4001
    protocol: TCP
  selector:
    app: graphql-gateway

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: graphql-gateway
  namespace: zoptal-production
  labels:
    app: graphql-gateway

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: graphql-gateway
  namespace: zoptal-production
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: graphql-gateway
  namespace: zoptal-production
subjects:
- kind: ServiceAccount
  name: graphql-gateway
  namespace: zoptal-production
roleRef:
  kind: Role
  name: graphql-gateway
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Secret
metadata:
  name: graphql-gateway-secrets
  namespace: zoptal-production
  labels:
    app: graphql-gateway
type: Opaque
data:
  jwt-secret: WW91cl9TVVBFUl9TRUNSRVRfS0VZX0hFUkVfMTIzNDU2Nzg5MA== # Your JWT secret (base64 encoded)

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: graphql-gateway
  namespace: zoptal-production
  labels:
    app: graphql-gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: graphql-gateway
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: graphql-gateway
  namespace: zoptal-production
  labels:
    app: graphql-gateway
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: graphql-gateway

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: graphql-gateway
  namespace: zoptal-production
spec:
  hosts:
  - graphql.zoptal.com
  - api.zoptal.com
  gateways:
  - zoptal-gateway
  http:
  - match:
    - uri:
        prefix: /graphql
    route:
    - destination:
        host: graphql-gateway
        port:
          number: 4000
    timeout: 300s
    retries:
      attempts: 3
      perTryTimeout: 100s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: graphql-gateway
        port:
          number: 4000
    timeout: 60s
    retries:
      attempts: 3
      perTryTimeout: 20s

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: graphql-gateway
  namespace: zoptal-production
spec:
  host: graphql-gateway
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 20
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
    circuitBreaker:
      consecutiveGatewayErrors: 5
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
    outlierDetection:
      consecutiveGatewayErrors: 5
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: graphql-gateway
  namespace: zoptal-production
  labels:
    app: graphql-gateway
spec:
  selector:
    matchLabels:
      app: graphql-gateway
  endpoints:
  - port: metrics
    interval: 15s
    path: /metrics
    honorLabels: true